# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'BusquedaDPview2.ui'
#
# Created by: PyQt5 UI code generator 5.15.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

from sqlalchemy import create_engine
from sqlalchemy.orm import sessionmaker, relationship
from PyQt5.QtWidgets import QTableWidget, QTableWidgetItem, QCompleter, QApplication, QTableView,QHeaderView
from PyQt5 import QtCore, QtGui, QtWidgets
import sys
sys.path.append('../Modelo/')
from farm import Clave
from PyQt5.QtCore import Qt, QSortFilterProxyModel 
from PyQt5.QtGui import QStandardItemModel, QStandardItem
import pandas as pd


engine = create_engine('mysql+pymysql://root:wil99@localhost/prueba')
Session = sessionmaker(bind=engine)
session = Session()

class Ui_BDP(object):
    def setupUi(self, BDP):
        BDP.setObjectName("BDP")
        BDP.resize(909, 412)
        BDP.setStyleSheet("*{\n"
"font-family:century gothic;\n"
"font-size: 15px;\n"
"}\n"
"QMainWindow{\n"
"background: #b8f4f0;\n"
"}\n"
"QLabel{\n"
"    background:transparent;\n"
"}\n"
"QLineEdit{\n"
"    border:none;\n"
"    border-bottom: 1px solid black;\n"
"    background: transparent;\n"
"}\n"
"QPushButton{\n"
"border-radius:15px;\n"
"background:#ffc001;\n"
"\n"
"}\n"
"QPushButton:hover{\n"
"background:#dea806;\n"
"}\n"
"")
        self.centralwidget = QtWidgets.QWidget(BDP)
        self.centralwidget.setObjectName("centralwidget")
        self.label_9 = QtWidgets.QLabel(self.centralwidget)
        self.label_9.setGeometry(QtCore.QRect(20, 20, 111, 21))
        self.label_9.setObjectName("label_9")
        self.LineClaveBusqueda = QtWidgets.QLineEdit(self.centralwidget)
        self.LineClaveBusqueda.setGeometry(QtCore.QRect(130, 10, 641, 31))
        self.LineClaveBusqueda.setObjectName("LineClaveBusqueda")
        self.label_10 = QtWidgets.QLabel(self.centralwidget)
        self.label_10.setGeometry(QtCore.QRect(20, 70, 111, 21))
        self.label_10.setObjectName("label_10")
        self.LinePresentaBusqueda = QtWidgets.QLineEdit(self.centralwidget)
        self.LinePresentaBusqueda.setGeometry(QtCore.QRect(130, 60, 641, 31))
        self.LinePresentaBusqueda.setObjectName("LinePresentaBusqueda")
        self.btnAceptarBusqueda = QtWidgets.QPushButton(self.centralwidget)
        self.btnAceptarBusqueda.setGeometry(QtCore.QRect(800, 40, 91, 31))
        self.btnAceptarBusqueda.setObjectName("btnAceptarBusqueda")
        self.tableView = QtWidgets.QTableView(self.centralwidget)
        self.tableView.setGeometry(QtCore.QRect(20, 120, 881, 231))
        self.tableView.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
        self.tableView.setObjectName("tableView")
        BDP.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(BDP)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 909, 26))
        self.menubar.setObjectName("menubar")
        BDP.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(BDP)
        self.statusbar.setObjectName("statusbar")
        BDP.setStatusBar(self.statusbar)

        self.retranslateUi(BDP)
        QtCore.QMetaObject.connectSlotsByName(BDP)
    
        #INGRESA LOS DATOS A LA TABLA Y HACE BUSQUEDA EN DESCRIPCION
        tipo = 1
        self.q = pd.read_sql('SELECT clave, descripcion FROM clave WHERE tipo = %s'% tipo, engine)
        print(self.q)
        self.numero =clave123 = session.query(Clave.corta).filter_by(tipo=1).count()
        self.model=QStandardItemModel( self.numero,3)
        self.model.setHorizontalHeaderLabels(['Clave','Descripcion'])
        self.tableView.horizontalHeader().setSectionResizeMode(QHeaderView.Stretch)
        for z in range( self.numero):
            for m in range(2):
                item = QStandardItem(self.q.iloc[z,m])
                self.model.setItem(z,m,item)
        buscador = QSortFilterProxyModel()
        buscador.setSourceModel(self.model)
        buscador.setFilterKeyColumn(2)
        self.LineClaveBusqueda.textChanged.connect(buscador.setFilterRegExp)
        self.tableView.setModel(buscador)
        
        self.LinePresentaBusqueda.mousePressEvent = self.mouseEven1
        self.LineClaveBusqueda.mousePressEvent = self.mouseEven2
        self.tableView.doubleClicked.connect(self.pedrito)
        
    def pedrito(self):
        QtWidgets.qApp.activeWindow().close()

    #EVENTO DEL CLICK Y PONE LOS DATOS EN LA TABLA DE NUEVO
    def mouseEven2(self,event):
        if event.buttons() and QtCore.Qt.LeftButton:
            self.BusquedaDPF()
            buscador = QSortFilterProxyModel()
            buscador.setSourceModel(self.model)
            buscador.setFilterKeyColumn(2)
            self.LineClaveBusqueda.textChanged.connect(buscador.setFilterRegExp)
            self.tableView.setModel(buscador)
    #EVENTO DEL CLICK Y PONE LOS DATOS EN LA TABLA DE NUEVO
    def mouseEven1(self,event):
        if event.buttons() and QtCore.Qt.LeftButton:
            self.BusquedaDPF()
            buscador = QSortFilterProxyModel()
            buscador.setSourceModel(self.model)
            buscador.setFilterKeyColumn(1)
            self.LinePresentaBusqueda.textChanged.connect(buscador.setFilterRegExp)
            self.tableView.setModel(buscador)

    def BusquedaDPF(self):
        self.model=QStandardItemModel( self.numero,3)
        self.model.setHorizontalHeaderLabels(['Clave','Presentacion','Descripcion'])
        self.tableView.horizontalHeader().setSectionResizeMode(QHeaderView.Stretch)
        for z in range( self.numero):
            for m in range(3):
                item = QStandardItem(self.q.iloc[z,m])
                self.model.setItem(z,m,item)

    def retranslateUi(self, BDP):
        _translate = QtCore.QCoreApplication.translate
        BDP.setWindowTitle(_translate("BDP", "MainWindow"))
        self.label_9.setText(_translate("BDP", "Descripción:"))
        self.label_10.setText(_translate("BDP", "Presentación:"))
        self.btnAceptarBusqueda.setText(_translate("BDP", "Aceptar"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    BDP = QtWidgets.QMainWindow()
    ui = Ui_BDP()
    ui.setupUi(BDP)
    BDP.show()
    sys.exit(app.exec_())
